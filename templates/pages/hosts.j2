<style>
    main {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-content: center;
        flex-wrap: wrap;
    }

    article {
        height: 200px;
        width: 300px;

        background-color: var(--tertiary-background-color);
        margin: 1rem;
        padding: 1rem;
        border: 3px solid var(--secondary-background-color);
        border-radius: 5px;
    }

    article h1 {
        overflow: hidden;
        text-overflow: ellipsis;
    }

    article hr {
        margin: 0.3rem -1rem;
        border: 2px solid var(--secondary-background-color);
    }

    article pre {
        font-family: monospace, monospace;
        white-space: pre;
        overflow: hidden;
        font-size: 1.1rem;
    }

    article div {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
    }

    article div i {
        cursor: pointer;
        margin: 0.5rem;
        font-size: 1.5rem;
    }

    article div i.edit {
        color: var(--text-color);
    }

    article div i.edit:hover {
        color: var(--background-color);
    }

    article div i.delete {
        color: var(--text-color);
    }

    article div i.delete:hover {
        color: var(--background-color);
    }

    article div i.active-toggle.on {
        color: var(--success-color);
    }

    article div i.active-toggle.on:hover {
        color: var(--success-color-hover);
    }

    article div i.active-toggle.off {
        color: var(--error-color);
    }

    article div i.active-toggle.off:hover {
        color: var(--error-color-hover);
    }

    #create-new {
        position: fixed;
        bottom: 2rem;
        right: 2rem;

        background-color: var(--secondary-background-color);
        color: var(--primary-color);
        border: 3px solid var(--tertiary-background-color);
        padding: 1rem;
        border-radius: 25%;
        font-size: 2rem;
        cursor: pointer;
    }

    #create-new:hover {
        background-color: var(--tertiary-background-color);
        color: var(--secondary-background-color);
    }

    #reload-nginx {
        position: fixed;
        bottom: 2rem;
        right: 7rem;

        border: 3px solid;
        padding: 1rem;
        border-radius: 25%;
        font-size: 2rem;
        cursor: pointer;
    }

    #reload-nginx.need-reload {
        background-color: var(--error-color-hover);
        border-color: var(--error-color);
        animation: shake 0.5s;
    }

    #reload-nginx.need-reload:hover {
        background-color: var(--error-color);
        border-color: var(--error-color-hover);
    }

    #reload-nginx:not(.need-reload) {
        background-color: var(--success-color-hover);
        border-color: var(--success-color);
    }

    #reload-nginx:not(.need-reload):hover {
        background-color: var(--success-color);
        border-color: var(--success-color-hover);
    }
</style>

<script>
    if (typeof makeElementsEditable === 'undefined') {
        var makeElementsEditable = () => {
            $('.active-toggle').on('click', function () {
                let enabled = $(this).hasClass('on');
                let filename = $(this).closest('article').find('h1').text();
                $.ajax({
                    url: '/api/hosts/' + filename + '/enabled?enabled=' + (enabled ? '0' : '1'),
                    method: 'PUT',
                    success: (data) => {
                        $(this).toggleClass('on off');
                        $(this).toggleClass('fa-toggle-on fa-toggle-off');
                        needToReload();
                    },
                });
            });

            $('.edit').on('click', function () {
                let filename = $(this).closest('article').find('h1').text();
                $.ajax({
                    url: '/api/hosts/' + filename,
                    beforeSend: () => {
                        spaManager.setLoading(true)
                    },
                    success: (data) => {
                        monacoModal.summonModal(filename, data["content"], (newcontent, newfilename) => {
                            $.ajax({
                                url: '/api/hosts/' + filename,
                                method: 'PUT',
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                data: JSON.stringify({
                                    content: newcontent,
                                    filename: newfilename
                                }),
                                beforeSend: () => {
                                    spaManager.setLoading(true)
                                },
                                success: (data) => {
                                    updateHosts();
                                    needToReload();
                                },
                                complete: () => {
                                    spaManager.setLoading(false)
                                },
                            });

                        });
                    },
                    complete: () => {
                        spaManager.setLoading(false)
                    },
                });
            });

            $('.delete').on('click', function () {
                let filename = $(this).closest('article').find('h1').text();

                if (!confirm("Are you sure you want to delete " + filename + "?")) {
                    return;
                }

                $.ajax({
                    url: '/api/hosts/' + filename,
                    method: 'DELETE',
                    beforeSend: () => {
                        spaManager.setLoading(true)
                    },
                    success: (data) => {
                        updateHosts();
                        needToReload();
                    },
                    complete: () => {
                        spaManager.setLoading(false)
                    },
                });
            });

            monacotheme =
                window.matchMedia &&
                    window.matchMedia("(prefers-color-scheme: light)").matches
                    ? "nginx-theme"
                    : "nginx-theme-dark";

            $("article pre").each(function (index, element) {
                monaco.editor.colorizeElement(element, { theme: monacotheme, language: "nginx" });
            });
        }
    }

    if (typeof updateHosts === 'undefined') {
        var updateHosts = () => {
            $("article").remove();
            $.ajax({
                url: '/api/hosts',
                beforeSend: () => {
                    spaManager.setLoading(true)
                },
                success: (data) => {
                    window.sites = data["sites"];
                    $.each(data["sites"], (index, sitedata) => {
                        let article = document.createElement('article');
                        article.innerHTML = /*html*/`
                        <div>
                            <h1>${sitedata["filename"]}</h1>
                            <div>
                                <i class="${sitedata["enabled"] ? 'on' : 'off'} active-toggle fa-solid fa-toggle-${sitedata["enabled"] ? 'on' : 'off'}"></i>
                                <i class="edit fa-solid fa-pen-to-square"></i>
                                <i class="delete fa-solid fa-trash"></i>
                            </div>
                        </div>
                        <hr>
                        <pre data-lang="nginx">${sitedata["content"]}</pre>
                    `;
                        $('main').append(article);
                    });

                    $.ajax({
                        url: '/api/hosts/reload',
                        method: 'GET',
                        success: (data) => {
                            if (data["reload"]) {
                                $('#reload-nginx').addClass('need-reload');
                            }
                        },
                    });
                },
                complete: () => {
                    makeElementsEditable()
                    spaManager.setLoading(false)
                },
            });
        }
    }

    if (typeof needToReload === 'undefined') {
        var needToReload = () => {
            if (!$('#reload-nginx').hasClass('need-reload')) {
                $('#reload-nginx').addClass('need-reload');
            }
        }
    }

    $(document).on("NAUIPageLoaded", () => {
        window.monacoModal = new MonacoModalManager();
        updateHosts();

        $('#create-new').on('click', () => {
            monacoModal.summonModal("mysite.conf", "# Your nginx code here.....\n", (newcontent, filename) => {
                $.ajax({
                    url: `/api/hosts/${filename}`,
                    method: 'POST',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({
                        content: newcontent
                    }),
                    beforeSend: () => {
                        spaManager.setLoading(true)
                    },
                    success: (data) => {
                        updateHosts();
                        needToReload();
                    },
                    complete: () => {
                        spaManager.setLoading(false)
                    },
                });
            }, true);
        });

        $('#reload-nginx').on('click', () => {
            $.ajax({
                url: '/api/hosts/reload',
                method: 'POST',
                beforeSend: () => {
                    spaManager.setLoading(true)
                },
                success: (data) => {
                    $('#reload-nginx').removeClass('need-reload');
                },
                complete: () => {
                    spaManager.setLoading(false)
                },
                error: (data) => {
                    alert("Failed to reload nginx: " + data.responseJSON.message);
                },
            });
        });
    });
</script>

<div id="create-new">
    <i class="fa-solid fa-plus"></i>
</div>
<div id="reload-nginx">
    <i class="fa-solid fa-sync"></i>
</div>